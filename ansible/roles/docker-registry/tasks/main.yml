---
# tasks file for docker-registry

# Copyright (C) 2020 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

- set_fact:
    images:
      - { repository: "registry", tag: "{{ registry_version }}" }
 
- name: copy to docker-registry files to /home/{{ ansible_user_id }}/docker-registry
  copy:
    src: files/
    dest: /home/{{ ansible_user_id }}/docker-registry
  tags:
    - docker-registry 

- name: template files into /home/{{ ansible_user_id }}/docker-registry
  template:
    src: templates/{{ item }}.j2
    dest: /home/{{ ansible_user_id }}/docker-registry/{{ item }}
  with_items:
    - "README.MD"
    - "Dockerfile"
    - "dockerfile_build.sh"
  tags:
    - docker-registry 

- name: make /home/{{ ansible_user_id }}/docker-registry/dockerfile_build.sh executable
  file: 
    path: /home/{{ ansible_user_id }}/docker-registry/dockerfile_build.sh
    mode: "u=rwx,g=r,o=r"  
  tags:
    - docker-registry 

- name: build private container registry
  block:
  - name: load {{ images }} from cache
    include_tasks: retrieve_container_image.yml
    loop: "{{ images }}"

  - name: pull {{ images }} container images
    docker_image:
      name: "{{ item.repository }}:{{ item.tag }}"
      source: pull
      timeout: "{{ docker_timeout }}"
    retries: "{{ docker_retries }}"
    delay: "{{ docker_delay }}"
    register: result
    until: result is succeeded
    loop: "{{ images }}"

  - name: build nemonik/registry:{{ registry_version }} docker image 
    docker_image:
      name: nemonik/registry:{{ registry_version }}
      source: build
      build:
        path: /home/{{ ansible_user_id }}/docker-registry
        pull: yes
        args:
          http_proxy: "{{ http_proxy|default('') }}"
          HTTP_PROXY: "{{ http_proxy|default('') }}"
          https_proxy: "{{ https_proxy|default('') }}"
          HTTPS_PROXY: "{{ https_proxy|default('') }}"
          NO_PROXY: "{{ no_proxy|default('') }}"
          no_proxy: "{{ no_proxy|default('') }}" 
    retries: "{{ default_retries }}" 
    delay: "{{ default_delay }}"
    register: result
    until: result is succeeded
  tags:
    - docker-registry 

- name: spin up container registry via Kubernetes
  block:
  - name: template kubernetes resource files into /home/{{ ansible_user_id }}/docker-registry
    template:
      src: templates/registry.yml.j2
      dest: /home/{{ ansible_user_id }}/docker-registry/registry.yml

  - name: spin up via kubectl
    shell: kubectl --kubeconfig=/home/{{ ansible_user_id }}/kubeconfig.yml apply -f registry.yml
    args:
      chdir: /home/{{ ansible_user_id }}/docker-registry

  - name: wait for registry to spin up
    shell: kubectl --kubeconfig=/home/{{ ansible_user_id }}/kubeconfig.yml -n registry get pod | grep Running
    retries: "{{ default_retries }}"
    delay: "{{ default_delay }}"
    register: retry_result
    until: retry_result is succeeded
  tags:
    - docker-registry

- name: save {{ images }} to cache
  include_tasks: cache_container_image.yml
  loop: "{{ images }}"
  tags:
    - docker-registry
