# Copyright (C) 2020 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

---

apiVersion: v1
kind: Namespace
metadata:
  name: registry

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-local-path-pvc
  namespace: registry
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi

---

apiVersion: apps/v1
kind: Deployment  
metadata:
  name: registry
  namespace: registry
  labels:
    app: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: nemonik/registry:{{ registry_version }}
        imagePullPolicy: IfNotPresent
        env:
{% if http_proxy %}
        - name: http_proxy
          value: {{ http_proxy }}
        - name: HTTP_PROXY
          value: {{ http_proxy }}
{% endif %}
{% if https_proxy %}
        - name: https_proxy
          value: {{ https_proxy }}
        - name: HTTPS_PROXY
          value: {{ https_proxy }}
{% endif %}
{% if no_proxy %}
        - name: no_proxy
          value: {{ no_proxy }}
        - name: NO_PROXY
          value: {{ no_proxy }}
{% endif %}
        ports:
        - name: http
          containerPort: 5000
        volumeMounts:
        - mountPath: /var/lib/registry
          name: data
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 180
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          timeoutSeconds: 1
          failureThreshold: 12
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: registry-local-path-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: registry
spec:
  ports:
    - name: http
      targetPort: http
      port: {{ registry_port }}
  selector:
    app: registry
  type: LoadBalancer
  loadBalancerIP: {{ registry_host }}
