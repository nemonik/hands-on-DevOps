# Copyright (C) 2020 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

apiVersion: v1
kind: Namespace
metadata:
  name: sonarqube

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: sonarqube
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: {{ registry_host }}:{{ registry_port }}/sameersbn/postgresql:10-2
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_NAME
          value: sonardb
        - name: DB_USER
          value: sonar
        - name: DB_PASS
          value: sonar
        ports:
        - name: postgres
          containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql
          name: data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 5
          timeoutSeconds: 1
      volumes:
      - name: data
        emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: sonarqube
spec:
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres
  selector:
    app: postgresql

---

apiVersion: apps/v1
kind: Deployment  
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
      - name: sonarqube
        image: "{{ registry_host }}:{{ registry_port }}/nemonik/sonarqube:{{ sonarqube_version }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: SONARQUBE_JDBC_URL
          value: jdbc:postgresql://postgresql:5432/sonardb
{% if http_proxy %}
        - name: http_proxy
          value: {{ http_proxy }}
        - name: HTTP_PROXY
          value: {{ http_proxy }}
{% endif %}
{% if https_proxy %}
        - name: https_proxy
          value: {{ https_proxy }}
        - name: HTTPS_PROXY
          value: {{ https_proxy }}
{% endif %}
{% if no_proxy %}
        - name: no_proxy
          value: {{ no_proxy }}
        - name: NO_PROXY
          value: {{ no_proxy }}
{% endif %}
        ports:
        - name: http
          containerPort: 9000
        livenessProbe:
          httpGet:
            path: /
            port: 9000
          initialDelaySeconds: 300
          periodSeconds: 10
          timeoutSeconds: 15
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 9000
          initialDelaySeconds: 300
          periodSeconds: 10
          timeoutSeconds: 15
          failureThreshold: 3

---

apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: sonarqube
spec:
  ports:
    - name: http
      targetPort: http
      port: {{ sonarqube_port }}
  selector:
    app: sonarqube
  type: LoadBalancer
  loadBalancerIP: {{ sonarqube_host }}
