---
# tasks file for golang-sonarqube-scanner-image
  
# Copyright (C) 2020 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

- name: create /home/{{ ansible_user_id }}/golang-sonarqube-scanner-image
  file:
    path: /home/{{ ansible_user_id }}/golang-sonarqube-scanner-image
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  tags:
    - golang-sonarqube-scanner-image

- name: template files into /home/{{ ansible_user_id }}/golang-sonarqube-scanner-image
  template:
    src: templates/{{ item }}.j2
    dest: /home/{{ ansible_user_id }}/golang-sonarqube-scanner-image/{{ item }}
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"   
  with_items:
    - "Dockerfile"
    - "dockerfile_build.sh"
    - "push_into_private_repo.sh"
  tags:
    - golang-sonarqube-scanner-image

- name: ensure scripts are executable
  file: 
    path: /home/{{ ansible_user_id }}/golang-sonarqube-scanner-image/{{ item }}
    mode: "u=rwx,g=r,o=r"
  with_items:
    - "dockerfile_build.sh"
    - "push_into_private_repo.sh"
  tags:
    - golang-sonarqube-scanner-image

- name: build golang-sonarqube-scanner:{{ sonar_scanner_cli_version }} image and push into private container registry
  docker_image:
    name: nemonik/golang-sonarqube-scanner
    tag: "{{ sonar_scanner_cli_version }}"
    repository: "{{ registry_host }}:{{ registry_port }}/nemonik/golang-sonarqube-scanner"
    build:
      path: /home/{{ ansible_user_id }}/golang-sonarqube-scanner-image
      pull: yes
      args:
        http_proxy: "{{ http_proxy|default('') }}"
        HTTP_PROXY: "{{ http_proxy|default('') }}"
        https_proxy: "{{ https_proxy|default('') }}"
        HTTPS_PROXY: "{{ https_proxy|default('') }}"
        NO_PROXY: "{{ no_proxy|default('') }}"
        no_proxy: "{{ no_proxy|default('') }}" 
    push: yes
  retries: "{{ docker_retries }}"
  delay: "{{ docker_delay }}"
  register: result
  until: result is succeeded
  tags:
    - golang-sonarqube-scanner-image
