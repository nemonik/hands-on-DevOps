---
# tasks file for docker

# Copyright (C) 2020 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>


- name: ensure docker group exists
  become: yes
  group:
    name: docker
    state: present
  tags:
    - docker

- name: include centos_7.yml, when CentOS 7
  include: centos_7.yml
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7'
  tags: docker

- name: include ubunutu_bionic.yml, when Ubuntu-bionic
  include: ubuntu_bionic.yml
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'bionic'
  tags: docker

- name: include alpine_310.yml, when Alpine 3.10
  include: alpine_310.yml
  when: ansible_distribution == 'Alpine' and '3.10' in ansible_distribution_version
  tags: docker

- name: Create paths, if they do not exist
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/default
    - /etc/docker
    - /etc/systemd/system/docker.service.d
  tags:
    - docker

- name: Create /etc/systemd/system/docker.service.d/http-proxy.conf if it does not exist
  become: yes
  file:
    path: /etc/systemd/system/docker.service.d/http-proxy.conf
    state: touch
  tags:
    - docker

- name: ensure docker service is enabled
  become: yes
  service:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker

- name: configured Docker options (e.g., insecure registry, DNS)
  become: yes
  template:
    src: templates/etc/docker/daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
    force: yes
  register: etcdockerdaemonjson
  tags:
    - docker

- name: start and enable docker service
  become: yes
  service:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker

- name: add {{ ansible_user_id }} user to docker group
  become: yes
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  tags:
    - docker

#
# Using shell cuz of
#
# "WARNING: pip is being invoked by an old script wrapper. 
# This will fail in a future version of pip. Please see https://github.com/pypa/pip/issues/5599
# for advice on fixing the underlying issue. To avoid this problem you can invoke Python with 
# '-m pip' instead of running pip directly.
#
- name: pip uninstall docker-py
  shell: "{{ ansible_python_version }} -m pip uninstall docker-py"
  args:
    warn: no
  tags:
    - docker

- name: ensure /etc/profile PATH includes $HOME/.local/bin
  become: yes
  block:
    - lineinfile:
        dest: /etc/profile
        regexp: "^export PATH=$HOME/.local/bin:$PATH"
        state: absent

    - lineinfile:
        dest: /etc/profile
        line: "export PATH=$HOME/.local/bin:$PATH"
        insertafter: EOF
  tags:
    - docker

#
# Using shell cuz of 
#
# "WARNING: pip is being invoked by an old script wrapper. 
# This will fail in a future version of pip. Please see https://github.com/pypa/pip/issues/5599 
# for advice on fixing the underlying issue. To avoid this problem you can invoke Python with 
# '-m pip' instead of running pip directly. 
#
- name: pip install docker
  shell: "{{ ansible_python_version }} -m pip install --user docker"
  args:
    warn: no
  tags:
    - docker
